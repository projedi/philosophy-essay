@article{the-view-from-the-left,
author = {MCBRIDE,CONOR and MCKINNA,JAMES},
title = {The view from the left},
journal = {Journal of Functional Programming},
volume = {14},
issue = {01},
month = {1},
year = {2004},
issn = {1469-7653},
pages = {69--111},
numpages = {43},
doi = {10.1017/S0956796803004829},
URL = {http://journals.cambridge.org/article_S0956796803004829},
}

@book{lambda-calculus-syntax-and-semantics,
  author = {H. P. Barendregt},
  title = {The Lambda Calculus Its Syntax and Semantics},
  publisher = {North Holland},
  year = {1984},
  volume = {103},
  edition = {Revised}
}

@INPROCEEDINGS{lambda-calculi-with-types,
    author = {Henk Barendregt and S. Abramsky and D. M. Gabbay and T. S. E. Maibaum and H. P. Barendregt},
    title = {Lambda Calculi with Types},
    booktitle = {Handbook of Logic in Computer Science},
    year = {1992},
    pages = {117--309},
    publisher = {Oxford University Press}
}

@book{tapl,
 author = {Pierce, Benjamin C.},
 title = {Types and Programming Languages},
 year = {2002},
 isbn = {0-262-16209-1},
 publisher = {MIT Press},
 address = {Cambridge, MA, USA},
}

@inproceedings{theorems-for-free,
    author = {Philip Wadler},
    title = {Theorems for free!},
    booktitle = {Functional Programming Languages and Computer Architecture},
    year = {1989},
    pages = {347--359},
    publisher = {ACM Press}
}

@article{propositions-as-types,
  title={Propositions as types},
  author={Wadler, Philip}
}

@inproceedings{intuitionistic-theory-of-types,
author = {P. Martin-L{\"o}f},
title = {{An intuitionistic theory of types: predicative part}},
booktitle = {Logic Colloquium},
year = {1973},
masid = {1276937}
}

@article{proving-properties-of-programs-by-structural-induction,
  title={Proving properties of programs by structural induction},
  author={Burstall, Rod M},
  journal={The Computer Journal},
  volume={12},
  number={1},
  pages={41--48},
  year={1969},
  publisher={Br Computer Soc}
}

@article{transformation-system-for-developing-recursive-programs,
  title={A transformation system for developing recursive programs},
  author={Burstall, Rod M and Darlington, John},
  journal={Journal of the ACM (JACM)},
  volume={24},
  number={1},
  pages={44--67},
  year={1977},
  publisher={ACM}
}

@inproceedings{hope-an-experimental-applicative-language,
  title={HOPE: An experimental applicative language},
  author={Burstall, Rod M and MacQueen, David B and Sannella, Donald T},
  booktitle={Proceedings of the 1980 ACM conference on LISP and functional programming},
  pages={136--143},
  year={1980},
  organization={ACM}
}

@ARTICLE{inductive-families,
    author = {Peter Dybjer},
    title = {Inductive Families},
    journal = {Formal Aspects of Computing},
    year = {1997},
    volume = {6},
    pages = {440--465}
}

@inproceedings{dependent-pattern-matching,
  title={Pattern matching with dependent types},
  author={Coquand, Thierry},
  booktitle={Proceedings of the Workshop on Types for Proofs and Program},
  pages={66--79},
  year={1992},
  organization={Citeseer}
}

@inproceedings{observational-equality-now,
  title={Observational equality, now!},
  author={Altenkirch, Thorsten and McBride, Conor and Swierstra, Wouter},
  booktitle={Proceedings of the 2007 workshop on Programming languages meets program verification},
  pages={57--68},
  year={2007},
  organization={ACM}
}

@incollection{eliminating-dependent-pattern-matching,
  title={Eliminating dependent pattern matching},
  author={Goguen, Healfdene and McBride, Conor and McKinna, James},
  booktitle={Algebra, Meaning, and Computation},
  pages={521--540},
  year={2006},
  publisher={Springer}
}
